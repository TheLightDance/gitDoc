//git 使用手册

/------------\

//经常用的linux文件命令行

 cd [文件夹名] --进入文件夹  

 mkdir [文件夹名] --创建文件夹

 pwd --显示当前文件路径  

 ls -ah 显示当前文件夹子文件目录[有-ah可显示隐藏文件]

\------------/


/------------\

//git命令[本地]

git add [文件名] [文件名] --将文件添加到版本跟踪

git commit -m '提交信息' --将文件提交到仓库

git status --查看仓库当前状态，是否有更改未提交

git diff [文件名] --查看本次文件更改

git diff HEAD -- [文件名] --工作区和版本库最新版本的区别

git log  --显示提交日志[--pretty=oneline 可方便查看]

git reset --hard HEAD^ --回退到上一个版本（HEAD~100  回退多少个版本）

git reset --hard [版本号] -- 回到某个指定版本

git reflog --显示记录的git命令

git checkout -- [文件名]  --让文件回到最近一次的add 或者 commit 之前

git reset HEAD [文件名] --将暂存区的修改撤销掉

git rm [文件名] --将文件删除


//git命令[远程]

git remote --查看远程库信息

git remote -v --查看远程库详细信息

git remote add origin git@github.com:TheLightDance/gitDoc.git --关联远程库

git push -u origin master --第一次推送master分支的内容

git push [远程库] [分支名] --本地提交后，可以用此命令推送修改

git pull  从远程拉取并且与本地合并

git clone git@github.com:TheLightDance/dva-knowledgemap.git --从远程库克隆一个本地库

git checkout -b dev origin/dev --创建远程origin的dev分支到本地

git branch --set-upstream-to [分支名] origin/[分支名] --将本地分支与远程分支建立链接

git rebase --将本地未push的分叉提交历史整理成直线


//git分支操作


git branch --查看所有分支

git branch -d [分支名] 删除[分支名]分支

git branch -D [分支名] 强行删除[分支名]分支，可删除未合并的分支

git checkout -b [分支名] --新建分支并切换到该分支
 |
 |-- 相当于
 |-- git branch [分支名] 创建分支
 |-- git checkout [分支名] 切换到分支

git merge [分支名] 将[分支名]上的修改合并到当前分支

git merge --no-ff -m '提交信息' [分支名] --非Fast forward合并

git stash --储存工作现场

git stash pop --恢复工作现场


//git标签操作

git tag --查看所有标签

git tag [标签名] --添加标签

git tag -a [标签名] -m [标签信息] [commit id]

git tag [标签名] [提交id] --给某次提交打标签

git show [标签名] --查看标签信息

\------------/
